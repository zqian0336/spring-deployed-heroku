{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/Layout/Footer.js","App.js","serviceWorker.js","index.js","assets/manager.svg","assets/orange.mp4"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","target","diff","Date","getTime","now","days","Math","floor","this","className","to","projectIdentifier","projectName","description","start_date","end_date","leftTime","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","style","display","map","key","state","get","res","setJWTToken","token","defaults","headers","common","login","LoginRequest","localStorage","setItem","decoded","jwt_decode","logout","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","height","width","marginRight","src","Icon","data-toggle","data-target","AddProject","errors","onChange","onSubmit","nextProps","setState","e","name","value","preventDefault","newProject","classnames","placeholder","rows","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","cols","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","dueDate","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","username","password","url","Video","loop","muted","playing","fontSize","marginTop","Register","confirmPassword","newUser","createNewUser","Login","component","otherProps","render","Footer","jwtToken","decoded_jwtToken","currentTime","exp","alert","isLanding","showFooter","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"qRAGaA,EAAgB,SAACC,EAASC,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAErCC,IAAMC,KAAK,eAAgBL,GAFU,OAG3CC,EAAQK,KAAK,cACbJ,EAAS,CACLK,KCRc,aDSdC,QAAS,KAN8B,gDAS3CN,EAAS,CACLK,KCbc,aDcdC,QAAS,KAAIC,SAASC,OAXiB,yDAAtB,uDEKvBC,E,4MACFC,cAAgB,SAAAC,GACZ,EAAKC,MAAMC,cAAcF,I,uDAGpBG,GACL,IAAIC,EAAQ,IAAIC,KAAKF,GAAQG,UAAYD,KAAKE,MAC1CC,EAAOC,KAAKC,MAAMN,EAAK,OAQ3B,OANGI,GAAO,EACEA,EAAO,cAEfA,IAAS,GACM,c,+BASb,IACErB,EAAYwB,KAAKV,MAAjBd,QAGR,OACI,yBAAKyB,UAAU,aACX,yBAAKA,UAAU,0EACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8BACX,kBAAC,IAAD,CAAMA,UAAU,4BAA4BC,GAAE,wBAAmB1B,EAAQ2B,oBAAqB,4BAAK3B,EAAQ4B,cAC3G,0BAAMH,UAAU,YAAhB,OAAgCzB,EAAQ2B,mBACxC,uBAAGF,UAAU,sBAAsBzB,EAAQ6B,aAE3C,yBAAKJ,UAAU,YACX,yCAAezB,EAAQ8B,YACvB,6BACA,sCAAY9B,EAAQ+B,UACpB,gCAAQ,2BAAIP,KAAKQ,SAAShC,EAAQ+B,cAQ1C,yBAAKN,UAAU,wBACX,wBAAIA,UAAU,cACV,kBAAC,IAAD,CAAMC,GAAE,wBAAmB1B,EAAQ2B,oBAC/B,wBAAIF,UAAU,yBACV,uBAAGA,UAAU,gBAAe,uBAAGA,UAAU,+BAAzC,mBAGR,kBAAC,IAAD,CAAMC,GAAE,yBAAoB1B,EAAQ2B,oBAChC,wBAAIF,UAAU,0BACV,uBAAGA,UAAU,gBAAe,uBAAGA,UAAU,oBAAzC,iBAIR,wBACIA,UAAU,yBACVQ,QAAST,KAAKZ,cAAcsB,KACxBV,KACAxB,EAAQ2B,oBAGZ,uBAAGF,UAAU,gBAAe,uBAAGA,UAAU,4BAAzC,6B,GAnEVU,aAmFXC,cACX,KACA,CAAErB,cFtDuB,SAAAF,GAAE,8CAAI,WAAMX,GAAN,SAAAC,EAAA,0DAE3BkC,OAAOC,QACH,6EAHuB,gCAMrBlC,IAAMmC,OAAN,uBAA6B1B,IANR,OAO3BX,EAAS,CACLK,KC5CkB,iBD6ClBC,QAASK,IATc,2CAAJ,wDEoDhBuB,CAGbzB,GCjFa6B,EAVa,WACxB,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAMf,GAAG,cAAcD,UAAU,uDAAjC,mBCGNiB,E,kLAEElB,KAAKV,MAAM6B,gB,+BAKL,IACEC,EAAapB,KAAKV,MAAMd,QAAxB4C,SAMR,OAEI,yBAAKnB,UAAU,sBACX,yBAAKA,UAAU,aAEX,wBAAIA,UAAU,iCAAd,WACA,6BACA,kBAAC,EAAD,MAEA,6BACA,6BACA,yBAAKoB,MAfI,CACjBC,QAAQ,QAc0BrB,UAAU,OACnCmB,EAASG,KAAI,SAAA/C,GAAO,OACjB,yBAAKyB,UAAU,uBACX,kBAAC,EAAD,CAAauB,IAAKhD,EAAQa,GAAIb,QAASA,e,GA5B3CmC,aAiDTC,eAJS,SAAAa,GAAK,MAAK,CAC9BjD,QAASiD,EAAMjD,WAKf,CAAE2C,YJzCqB,yDAAM,WAAMzC,GAAN,eAAAC,EAAA,sEACXC,IAAM8C,IAAI,oBADC,OACvBC,EADuB,OAE7BjD,EAAS,CACLK,KCrBoB,eDsBpBC,QAAS2C,EAAIzC,OAJY,2CAAN,wDIuCZ0B,CAGbM,GClDaU,EARK,SAAAC,GACZA,EACAjD,IAAMkD,SAASC,QAAQC,OAAvB,cAAiDH,SAE1CjD,IAAMkD,SAASC,QAAQC,OAAvB,e,iBCeFC,EAAQ,SAAAC,GAAY,8CAAI,WAAMxD,GAAN,mBAAAC,EAAA,+EAGXC,IAAMC,KAAK,mBAAoBqD,GAHpB,OAGvBP,EAHuB,OAKrBE,EAAUF,EAAIzC,KAAd2C,MAERM,aAAaC,QAAQ,WAAYP,GAEjCD,EAAYC,GAENQ,EAAUC,IAAWT,GAE3BnD,EAAS,CACLK,KLzBoB,mBK0BpBC,QAASqD,IAfgB,kDAkB7B3D,EAAS,CACLK,KLzCc,aK0CdC,QAAS,KAAIC,SAASC,OApBG,0DAAJ,uDAyBpBqD,EAAS,kBAAM,SAAA7D,GACxByD,aAAaK,WAAW,YACxBZ,GAAY,GACZlD,EAAS,CACLK,KLxCwB,mBKyCxBC,QAAS,O,iBC7CXyD,E,uKAEEzC,KAAKV,MAAMiD,SACX1B,OAAO6B,SAASC,KAAO,M,+BAEjB,IAwDFC,EAxDC,EACwB5C,KAAKV,MAAMuD,SAAhCC,EADH,EACGA,WAAYC,EADf,EACeA,KAQdC,EACF,yBAAK/C,UAAU,2BAA2BZ,GAAG,cACzC,wBAAIY,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,cAA9B,eAMR,wBAAID,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,cAC1B,uBAAGD,UAAU,4BACZ8C,EAAKE,WAGd,wBAAIhD,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,GAAG,UACHO,QAAST,KAAKuC,OAAO7B,KAAKV,OAH9B,aAYVkD,EACF,yBAAKjD,UAAU,2BAA2BZ,GAAG,cACzC,wBAAIY,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,aAA9B,YAIJ,wBAAID,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,UAA9B,YAgBhB,OALI0C,EADAE,GAAcC,EACAC,EAEAE,EAKd,yBAAKjD,UAAU,wCACX,yBAAKA,UAAU,aAEX,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAC9B,yBAAKmB,MAnEL,CACZ8B,OAAQ,SACRC,MAAQ,SACRC,YAAa,QAgEoBC,IAAKC,MAD9B,cAIA,4BACItD,UAAU,iBACVlB,KAAK,SACLyE,cAAY,WACZC,cAAY,eAEZ,0BAAMxD,UAAU,yBAEnB2C,Q,GAtFAjC,aAsGNC,eAJS,SAAAa,GAAK,MAAK,CAC9BoB,SAAUpB,EAAMoB,YAKhB,CAAEN,UAFS3B,CAGb6B,G,gDCzGIiB,E,kDACF,aAAe,IAAD,8BACV,gBAEKjC,MAAQ,CACTrB,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbC,WAAY,GACZC,SAAU,GACVoD,OAAQ,IAGZ,EAAKC,SAAW,EAAKA,SAASlD,KAAd,gBAChB,EAAKmD,SAAW,EAAKA,SAASnD,KAAd,gBAbN,E,sEAiBYoD,GAClBA,EAAUH,QACV3D,KAAK+D,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAIjCK,GACLhE,KAAK+D,SAAL,eAAiBC,EAAExE,OAAOyE,KAAOD,EAAExE,OAAO0E,U,+BAGrCF,GACLA,EAAEG,iBACF,IAAMC,EAAa,CACfhE,YAAaJ,KAAKyB,MAAMrB,YACxBD,kBAAmBH,KAAKyB,MAAMtB,kBAC9BE,YAAaL,KAAKyB,MAAMpB,YACxBC,WAAYN,KAAKyB,MAAMnB,WACvBC,SAAUP,KAAKyB,MAAMlB,UAEzBP,KAAKV,MAAMf,cAAc6F,EAAYpE,KAAKV,MAAMb,W,+BAG1C,IACEkF,EAAW3D,KAAKyB,MAAhBkC,OAER,OACI,6BACI,yBAAK1D,UAAU,uCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAM4D,SAAU7D,KAAK6D,UACjB,yBAAK5D,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAWoE,IAAW,gBAAiB,CACnC,aAAcV,EAAOvD,cAEzBkE,YAAY,eACZL,KAAK,cACLC,MAAOlE,KAAKyB,MAAMrB,YAClBwD,SAAU5D,KAAK4D,WAElBD,EAAOvD,aACJ,yBAAKH,UAAU,oBACV0D,EAAOvD,cAIpB,yBAAKH,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAWoE,IAAW,gBAAiB,CACnC,aAAcV,EAAOxD,oBAEzBmE,YAAY,oBACZL,KAAK,oBACLC,MAAOlE,KAAKyB,MAAMtB,kBAClByD,SAAU5D,KAAK4D,WAElBD,EAAOxD,mBACJ,yBAAKF,UAAU,oBACV0D,EAAOxD,oBAIpB,yBAAKF,UAAU,cAC/B,8BACIA,UAAWoE,IAAW,gBAAiB,CACnC,aAAcV,EAAOtD,cAEzBiE,YAAY,sBACZL,KAAK,cACLC,MAAOlE,KAAKyB,MAAMpB,YAClBuD,SAAU5D,KAAK4D,SACfW,KAAK,MAEYZ,EAAOtD,aACJ,yBAAKJ,UAAU,oBACV0D,EAAOtD,cAIpB,0CACA,yBAAKJ,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAU,gBACVgE,KAAK,aACLC,MAAOlE,KAAKyB,MAAMnB,WAClBsD,SAAU5D,KAAK4D,YAGvB,kDACA,yBAAK3D,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAU,gBACVgE,KAAK,WACLC,MAAOlE,KAAKyB,MAAMlB,SAClBqD,SAAU5D,KAAK4D,YAIvB,2BACI7E,KAAK,SACLkB,UAAU,6CAEd,kBAAC,IAAD,CACIC,GAAE,iBACFD,UAAU,qCAFd,qB,GAhIXU,aAyJVC,eAJS,SAAAa,GAAK,MAAK,CAC9BkC,OAAQlC,EAAMkC,UAKd,CAAEpF,iBAFSqC,CAGb8C,G,gBCjKIc,EAAe,G,QCAfA,EAAe,CACjBpD,SAAU,GACV5C,QAAS,ICGPgG,EAAe,CACjBC,cAAe,GACfC,aAAc,ICPZF,EAAe,CACjB1B,YAAY,EACZC,KAAM,IAGJ4B,EAAuB,SAAA3F,GACzB,QAAIA,GCFO4F,cAAgB,CAC3BjB,OJHW,WAAwC,IAA/BlC,EAA8B,uDAAtB+C,EAAcK,EAAQ,uCAClD,OAAQA,EAAO9F,MACX,IRNkB,aQOd,OAAO8F,EAAO7F,QAElB,QACI,OAAOyC,IIFfjD,QHDW,WAAwC,IAA/BiD,EAA8B,uDAAtB+C,EAAcK,EAAQ,uCAClD,OAAQA,EAAO9F,MACX,ITRoB,eSShB,OAAO,eACA0C,EADP,CAEIL,SAAUyD,EAAO7F,UAGzB,ITbmB,cScf,OAAO,eACAyC,EADP,CAEIjD,QAASqG,EAAO7F,UAGxB,ITlBsB,iBSmBlB,OAAO,eACAyC,EADP,CAEIL,SAAUK,EAAML,SAAS0D,QACrB,SAAAtG,GAAO,OAAIA,EAAQ2B,oBAAsB0E,EAAO7F,aAG5D,QACI,OAAOyC,IGpBfsD,QFGW,WAAwC,IAA/BtD,EAA8B,uDAAtB+C,EAAcK,EAAQ,uCAClD,OAAQA,EAAO9F,MACX,IVPmB,cUQf,OAAO,eACA0C,EADP,CAEIgD,cAAeI,EAAO7F,UAG9B,IVZwB,mBUapB,OAAO,eACAyC,EADP,CAEIiD,aAAcG,EAAO7F,UAG7B,IVjB2B,sBUkBvB,OAAO,eACAyC,EADP,CAEIgD,cAAehD,EAAMgD,cAAcK,QAC/B,SAAAJ,GAAY,OAAIA,EAAaM,kBAAoBH,EAAO7F,aAIpE,QACI,OAAOyC,IEzBfoB,SDKW,WAAwC,IAA/BpB,EAA8B,uDAAtB+C,EAAcK,EAAQ,uCAClD,OAAQA,EAAO9F,MACX,IXNwB,mBWOpB,OAAO,eACA0C,EADP,CAEIqB,WAAY6B,EAAqBE,EAAO7F,SACxC+D,KAAM8B,EAAO7F,UAGrB,QACI,OAAOyC,MErBbwD,EAAc,GACdC,EAAa,CAACC,KAIdC,EACFvE,OAAOwE,8BAAgCxE,OAAOwE,+BAmBnCC,EAjBXzE,OAAO0E,UAAUC,UAAUC,SAAS,WAAaL,EACzCM,YACJC,EACAV,EACAW,YACIC,IAAe,WAAf,EAAmBX,GACnBE,IAIAM,YACJC,EACAV,EACAW,YAAQC,IAAe,WAAf,EAAmBX,KClB7BY,E,kDAEF,aAAe,IAAD,8BACV,gBAEKrE,MAAQ,CACTpC,GAAI,GACJe,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbC,WAAY,GACZC,SAAU,GACVoD,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASlD,KAAd,gBAChB,EAAKmD,SAAW,EAAKA,SAASnD,KAAd,gBAbN,E,sEAgBYoD,GAClBA,EAAUH,QACV3D,KAAK+D,SAAS,CAAEJ,OAAQG,EAAUH,SAFL,MAW7BG,EAAUtF,QANVa,EAL6B,EAK7BA,GACAe,EAN6B,EAM7BA,YACAD,EAP6B,EAO7BA,kBACAE,EAR6B,EAQ7BA,YACAC,EAT6B,EAS7BA,WACAC,EAV6B,EAU7BA,SAGJP,KAAK+D,SAAS,CACV1E,KACAe,cACAD,oBACAE,cACAC,aACAC,e,0CAIa,IACTlB,EAAOW,KAAKV,MAAMyG,MAAMC,OAAxB3G,GACRW,KAAKV,MAAM2G,WAAW5G,EAAIW,KAAKV,MAAMb,W,+BAGhCuF,GACLhE,KAAK+D,SAAL,eAAiBC,EAAExE,OAAOyE,KAAOD,EAAExE,OAAO0E,U,+BAGrCF,GACLA,EAAEG,iBAEF,IAAM+B,EAAgB,CAClB7G,GAAIW,KAAKyB,MAAMpC,GACfe,YAAaJ,KAAKyB,MAAMrB,YACxBD,kBAAmBH,KAAKyB,MAAMtB,kBAC9BE,YAAaL,KAAKyB,MAAMpB,YACxBC,WAAYN,KAAKyB,MAAMnB,WACvBC,SAAUP,KAAKyB,MAAMlB,UAGzBP,KAAKV,MAAMf,cAAc2H,EAAelG,KAAKV,MAAMb,W,+BAG7C,IACEkF,EAAW3D,KAAKyB,MAAhBkC,OACR,OACI,yBAAK1D,UAAU,6BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAM4D,SAAU7D,KAAK6D,UACjB,yBAAK5D,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAWoE,IAAW,eAAgB,CAClC,aAAcV,EAAOvD,cAEzBkE,YAAY,eACZL,KAAK,cACLC,MAAOlE,KAAKyB,MAAMrB,YAClBwD,SAAU5D,KAAK4D,WAElBD,EAAOvD,aACJ,yBAAKH,UAAU,oBAAoB0D,EAAOvD,cAGlD,yBAAKH,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAU,eACVqE,YAAY,oBACZL,KAAK,oBACLC,MAAOlE,KAAKyB,MAAMtB,kBAClByD,SAAU5D,KAAK4D,SACfuC,UAAQ,KAGhB,yBAAKlG,UAAU,cAC7B,8BACIA,UAAWoE,IAAW,eAAgB,CAClC,aAAcV,EAAOtD,cAEzBiE,YAAY,sBACZL,KAAK,cACLL,SAAU5D,KAAK4D,SACfM,MAAOlE,KAAKyB,MAAMpB,YAClB+F,KAAO,KACP7B,KAAK,MAEUZ,EAAOtD,aACJ,yBAAKJ,UAAU,oBAAoB0D,EAAOtD,cAGlD,0CACA,yBAAKJ,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAU,gBACVgE,KAAK,aACLC,MAAOlE,KAAKyB,MAAMnB,WAClBsD,SAAU5D,KAAK4D,YAGvB,kDACA,yBAAK3D,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAU,gBACVgE,KAAK,WACLC,MAAOlE,KAAKyB,MAAMlB,SAClBqD,SAAU5D,KAAK4D,YAIvB,2BACI7E,KAAK,SACLkB,UAAU,qCAEd,kBAAC,IAAD,CACIC,GAAE,iBACFD,UAAU,qCAFd,oB,GA9IJU,aA0KbC,gBALS,SAAAa,GAAK,MAAK,CAC9BjD,QAASiD,EAAMjD,QAAQA,QACvBmF,OAAQlC,EAAMkC,UAKd,CAAEsC,WfxJoB,SAAC5G,EAAIZ,GAAL,8CAAiB,WAAMC,GAAN,eAAAC,EAAA,+EAEjBC,IAAM8C,IAAN,uBAA0BrC,IAFT,OAE7BsC,EAF6B,OAGnCjD,EAAS,CACLK,KC7Be,cD8BfC,QAAS2C,EAAIzC,OALkB,gDAQnCT,EAAQK,KAAK,cARsB,yDAAjB,uDewJRP,iBAFHqC,CAGbkF,GC9KIO,G,4KACYC,EAAYC,GACtBvG,KAAKV,MAAMkH,kBAAkBF,EAAYC,K,+BAGpC/G,GACL,IAAIA,EAAQ,MAAO,GACnB,IAAIC,EAAQ,IAAIC,KAAKF,GAAQG,UAAYD,KAAKE,MAC1CC,EAAOC,KAAKC,MAAMN,EAAK,OAQ3B,OANGI,GAAO,EACEA,EAAO,cAEfA,IAAS,GACM,c,+BAKb,IAEF4G,EACAC,EAFIhC,EAAiB1E,KAAKV,MAAtBoF,aAmBR,OAf8B,IAA1BA,EAAaiC,WACbD,EAAgB,oBAChBD,EAAiB,QAGS,IAA1B/B,EAAaiC,WACbD,EAAgB,sBAChBD,EAAiB,UAGS,IAA1B/B,EAAaiC,WACbD,EAAgB,mBAChBD,EAAiB,OAIjB,yBAAKxG,UAAU,+BACX,yBAAKA,UAAS,mCAA8ByG,IAA5C,OACShC,EAAaM,gBADtB,gBACoDyB,EADpD,MAGA,yBAAKxG,UAAU,sBACX,wBAAIA,UAAU,cAAcyE,EAAakC,SACzC,+BAAO,uBAAG3G,UAAU,eAAeD,KAAKQ,SAASkE,EAAamC,WAC9D,uBAAG5G,UAAU,gCACRyE,EAAaoC,oBAElB,yBAAK7G,UAAU,YACX,kBAAC,IAAD,CACIC,GAAE,6BAAwBwE,EAAavE,kBAArC,YACEuE,EAAaM,iBAEjB/E,UAAU,+BAJd,iBASA,4BACIA,UAAU,mCACVQ,QAAST,KAAKZ,cAAcsB,KACxBV,KACA0E,EAAavE,kBACbuE,EAAaM,kBALrB,iB,GA5DErE,aAgFXC,eACX,KACA,CAAE4F,kBCP2B,SAACF,EAAYC,GAAb,8CAAuB,WAAM7H,GAAN,SAAAC,EAAA,0DAEhDkC,OAAOC,QAAP,wCACqCyF,EADrC,mCAFgD,gCAM1C3H,IAAMmC,OAAN,uBAA6BuF,EAA7B,YAA2CC,IAND,OAOhD7H,EAAS,CACLK,KhBhFuB,sBgBiFvBC,QAASuH,IATmC,2CAAvB,wDDKlB3F,CAGbyF,IExBaU,G,uKAlDP,IAXM,IAGAC,EAFyBhH,KAAKV,MAA5B2H,mBAEyB1F,KAAI,SAAAmD,GAAY,OAC7C,kBAAC,GAAD,CAAalD,IAAKkD,EAAarF,GAAIqF,aAAcA,OAGjDwC,EAAY,GACZC,EAAkB,GAClBC,EAAY,GAEPC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IACa,UAAvCL,EAAMK,GAAG/H,MAAMoF,aAAa6C,QAC5BL,EAAUpI,KAAKkI,EAAMK,IAGkB,gBAAvCL,EAAMK,GAAG/H,MAAMoF,aAAa6C,QAC5BJ,EAAgBrI,KAAKkI,EAAMK,IAGY,SAAvCL,EAAMK,GAAG/H,MAAMoF,aAAa6C,QAC5BH,EAAUtI,KAAKkI,EAAMK,IAI7B,OACI,yBAAKpH,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,4BACX,uCAGPiH,GAKL,yBAAKjH,UAAU,YACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,4BACX,6CAGPkH,GAEL,yBAAKlH,UAAU,YACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,+BACX,sCAGPmH,S,GAtDHzG,aCIhB6G,G,kDAEF,aAAe,IAAD,8BACV,gBACK/F,MAAQ,CACTkC,OAAQ,IAHF,E,gEAOO,IACTtE,EAAOW,KAAKV,MAAMyG,MAAMC,OAAxB3G,GACRW,KAAKV,MAAMmI,WAAWpI,K,gDAGAyE,GAClBA,EAAUH,QACV3D,KAAK+D,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAIhC,IAKF+D,EAJIrI,EAAOW,KAAKV,MAAMyG,MAAMC,OAAxB3G,GACAoF,EAAkBzE,KAAKV,MAAMyF,QAA7BN,cAkCR,OAFAiD,EA3BuB,SAAC/D,EAAQc,GAC5B,OAAIA,EAAc6C,OAAS,EAEnB3D,EAAOgE,gBAEH,yBAAK1H,UAAU,iCAAiC2H,KAAK,SAChDjE,EAAOgE,iBAGThE,EAAOxD,kBAEV,yBAAKF,UAAU,iCAAiC2H,KAAK,SAChDjE,EAAOxD,mBAKZ,yBAAKF,UAAU,+BAA+B2H,KAAK,SAAnD,kCAMD,kBAAC,GAAD,CAASX,mBAAoBxC,IAI7BoD,CA/BI7H,KAAKyB,MAAhBkC,OA+B8Bc,GAGlC,yBAAKxE,UAAU,yCACX,kBAAC,IAAD,CAAMC,GAAE,0BAAqBb,GAAMY,UAAU,4DACzC,uBAAGA,UAAU,sBADjB,wBAGA,6BACA,6BACCyH,O,GA/DU/G,aAgFZC,gBALS,SAAAa,GAAK,MAAK,CAC9BsD,QAAStD,EAAMsD,QACfpB,OAAQlC,EAAMkC,UAKd,CAAE8D,WF5DoB,SAAAnB,GAAU,8CAAI,WAAM5H,GAAN,eAAAC,EAAA,+EAEdC,IAAM8C,IAAN,uBAA0B4E,IAFZ,OAE1B3E,EAF0B,OAGhCjD,EAAS,CACLK,KhB1Be,cgB2BfC,QAAS2C,EAAIzC,OALe,gDAQhCR,EAAS,CACLK,KhBtCc,agBuCdC,QAAS,KAAIC,SAASC,OAVM,yDAAJ,wDE0DrB0B,CAGb4G,IClFIM,G,kDACF,WAAYxI,GAAQ,IAAD,0BAEPD,GADR,cAAMC,IACcA,MAAMyG,MAAMC,OAAxB3G,GAFO,OAIf,EAAKoC,MAAQ,CACTmF,QAAS,GACTE,mBAAoB,GACpBS,OAAQ,GACRZ,SAAU,EACVE,QAAS,GACT1G,kBAAmBd,EACnBsE,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASlD,KAAd,gBAChB,EAAKmD,SAAW,EAAKA,SAASnD,KAAd,gBAdD,E,sEAiBOoD,GAClBA,EAAUH,QACV3D,KAAK+D,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAKjCK,GACLhE,KAAK+D,SAAL,eAAiBC,EAAExE,OAAOyE,KAAOD,EAAExE,OAAO0E,U,+BAGrCF,GACLA,EAAEG,iBAEF,IAAM4D,EAAU,CACZnB,QAAS5G,KAAKyB,MAAMmF,QACpBE,mBAAoB9G,KAAKyB,MAAMqF,mBAC/BS,OAAQvH,KAAKyB,MAAM8F,OACnBZ,SAAU3G,KAAKyB,MAAMkF,SACrBE,QAAS7G,KAAKyB,MAAMoF,SAGxB7G,KAAKV,MAAM0I,eACPhI,KAAKyB,MAAMtB,kBACX4H,EACA/H,KAAKV,MAAMb,W,+BAIT,IACEY,EAAOW,KAAKV,MAAMyG,MAAMC,OAAxB3G,GACAsE,EAAW3D,KAAKyB,MAAhBkC,OACR,OACI,yBAAK1D,UAAU,uCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBAEX,wBAAIA,UAAU,yBAAd,oBACA,uBAAGA,UAAU,oBAAb,+BACA,0BAAM4D,SAAU7D,KAAK6D,UACjB,yBAAK5D,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAWoE,IAAW,eAAgB,CAClC,aAAcV,EAAOiD,UAEzB3C,KAAK,UACLK,YAAY,uBACZJ,MAAOlE,KAAKyB,MAAMmF,QAClBhD,SAAU5D,KAAK4D,WAElBD,EAAOiD,SACJ,yBAAK3G,UAAU,oBAAoB0D,EAAOiD,UAGlD,yBAAK3G,UAAU,cAC7B,8BACIA,UAAU,gBACVqE,YAAY,sBACZL,KAAK,qBACLC,MAAOlE,KAAKyB,MAAMqF,mBAClBlD,SAAU5D,KAAK4D,YAGL,wCACA,yBAAK3D,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAU,eACVgE,KAAK,UACLC,MAAOlE,KAAKyB,MAAMoF,QAClBjD,SAAU5D,KAAK4D,YAGvB,yBAAK3D,UAAU,cACX,4BACIA,UAAU,gBACVgE,KAAK,WACLC,MAAOlE,KAAKyB,MAAMkF,SAClB/C,SAAU5D,KAAK4D,UAEf,4BAAQM,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIR,yBAAKjE,UAAU,cACX,4BACIA,UAAU,eACVgE,KAAK,SACLC,MAAOlE,KAAKyB,MAAM8F,OAClB3D,SAAU5D,KAAK4D,UAEf,4BAAQM,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIR,2BACInF,KAAK,SACLkB,UAAU,6CAEd,kBAAC,IAAD,CACIC,GAAE,wBAAmBb,GACrBY,UAAU,qCAFd,kC,GA7HHU,aAqJdC,gBAJS,SAAAa,GAAK,MAAK,CAC9BkC,OAAQlC,EAAMkC,UAKd,CAAEqE,eHtJwB,SAC1B1B,EACA5B,EACAjG,GAH0B,8CAIzB,WAAMC,GAAN,SAAAC,EAAA,+EAESC,IAAMC,KAAN,uBAA2ByH,GAAc5B,GAFlD,OAGGjG,EAAQK,KAAR,wBAA8BwH,IAC9B5H,EAAS,CACLK,KhBlBc,agBmBdC,QAAS,KANhB,gDASGN,EAAS,CACLK,KhBvBc,agBwBdC,QAAS,KAAIC,SAASC,OAX7B,yDAJyB,wDGoJf0B,CAGbkH,ICtJIG,G,kDACF,aAAe,IAAD,8BACV,gBAEKxG,MAAQ,CACTpC,GAAI,GACJ2F,gBAAiB,GACjB4B,QAAS,GACTE,mBAAoB,GACpBS,OAAQ,GACRZ,SAAU,GACVE,QAAS,GACT1G,kBAAmB,GACnB+H,UAAW,GACXvE,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASlD,KAAd,gBAChB,EAAKmD,SAAW,EAAKA,SAASnD,KAAd,gBAhBN,E,gEAmBO,IAAD,EACcV,KAAKV,MAAMyG,MAAMC,OAAvCM,EADQ,EACRA,WAAYC,EADJ,EACIA,MACpBvG,KAAKV,MAAM6I,eAAe7B,EAAYC,EAAOvG,KAAKV,MAAMb,W,gDAGlCqF,GAClBA,EAAUH,QACV3D,KAAK+D,SAAS,CAAEJ,OAAQG,EAAUH,SAFL,MAe7BG,EAAUY,aATVrF,EAN6B,EAM7BA,GACA2F,EAP6B,EAO7BA,gBACA4B,EAR6B,EAQ7BA,QACAE,EAT6B,EAS7BA,mBACAS,EAV6B,EAU7BA,OACAZ,EAX6B,EAW7BA,SACAE,EAZ6B,EAY7BA,QACA1G,EAb6B,EAa7BA,kBACA+H,EAd6B,EAc7BA,UAGJlI,KAAK+D,SAAS,CACV1E,KACA2F,kBACA4B,UACAE,qBACAS,SACAZ,WACAE,UACA1G,oBACA+H,gB,+BAIClE,GACLhE,KAAK+D,SAAL,eAAiBC,EAAExE,OAAOyE,KAAOD,EAAExE,OAAO0E,U,+BAGrCF,GACLA,EAAEG,iBAEF,IAAM8D,EAAoB,CACtB5I,GAAIW,KAAKyB,MAAMpC,GACf2F,gBAAiBhF,KAAKyB,MAAMuD,gBAC5B4B,QAAS5G,KAAKyB,MAAMmF,QACpBE,mBAAoB9G,KAAKyB,MAAMqF,mBAC/BS,OAAQvH,KAAKyB,MAAM8F,OACnBZ,SAAU3G,KAAKyB,MAAMkF,SACrBE,QAAS7G,KAAKyB,MAAMoF,QACpB1G,kBAAmBH,KAAKyB,MAAMtB,kBAC9B+H,UAAWlI,KAAKyB,MAAMyG,WAI1BlI,KAAKV,MAAM8I,kBACPpI,KAAKyB,MAAMtB,kBACXH,KAAKyB,MAAMuD,gBACXiD,EACAjI,KAAKV,MAAMb,W,+BAIT,IACEkF,EAAW3D,KAAKyB,MAAhBkC,OACR,OACI,yBAAK1D,UAAU,qBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6BAEX,wBAAIA,UAAU,gBAAd,uBACA,uBAAGA,UAAU,oBAAb,iBACmBD,KAAKyB,MAAMtB,kBAD9B,sBACoE,IAC/DH,KAAKyB,MAAMuD,gBAAiB,KAEjC,0BAAMnB,SAAU7D,KAAK6D,UACjB,yBAAK5D,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAWoE,IAAW,eAAgB,CAClC,aAAcV,EAAOiD,UAEzB3C,KAAK,UACLK,YAAY,uBACZJ,MAAOlE,KAAKyB,MAAMmF,QAClBhD,SAAU5D,KAAK4D,WAElBD,EAAOiD,SACJ,yBAAK3G,UAAU,oBAAoB0D,EAAOiD,UAGlD,yBAAK3G,UAAU,cAC7B,8BACIA,UAAU,eACVqE,YAAY,qCACZL,KAAK,qBACLC,MAAOlE,KAAKyB,MAAMqF,mBAClBlD,SAAU5D,KAAK4D,SACfW,KAAK,OAGK,wCACA,yBAAKtE,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAU,eACVgE,KAAK,UACLC,MAAOlE,KAAKyB,MAAMoF,QAClBjD,SAAU5D,KAAK4D,YAGvB,yBAAK3D,UAAU,cACX,4BACIA,UAAU,gBACVgE,KAAK,WACLC,MAAOlE,KAAKyB,MAAMkF,SAClB/C,SAAU5D,KAAK4D,UAEf,4BAAQM,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIR,yBAAKjE,UAAU,cACX,4BACIA,UAAU,gBACVgE,KAAK,SACLC,MAAOlE,KAAKyB,MAAM8F,OAClB3D,SAAU5D,KAAK4D,UAEf,4BAAQM,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIR,2BACInF,KAAK,SACLkB,UAAU,6CAEd,kBAAC,IAAD,CACIC,GAAE,wBAAmBF,KAAKyB,MAAMtB,mBAChCF,UAAU,qCAFd,kC,GApKAU,aA+LjBC,gBALS,SAAAa,GAAK,MAAK,CAC9BiD,aAAcjD,EAAMsD,QAAQL,aAC5Bf,OAAQlC,EAAMkC,UAKd,CAAEwE,eJ/JwB,SAC1B7B,EACAC,EACA9H,GAH0B,8CAIzB,WAAMC,GAAN,eAAAC,EAAA,+EAEqBC,IAAM8C,IAAN,uBAA0B4E,EAA1B,YAAwCC,IAF7D,OAES5E,EAFT,OAGGjD,EAAS,CACLK,KhB5CoB,mBgB6CpBC,QAAS2C,EAAIzC,OALpB,gDAQGT,EAAQK,KAAK,cARhB,yDAJyB,uDI+JRsJ,kBJ/IW,SAC7B9B,EACAC,EACA7B,EACAjG,GAJ6B,8CAK5B,WAAMC,GAAN,SAAAC,EAAA,+EAESC,IAAMyJ,MAAN,uBAA4B/B,EAA5B,YAA0CC,GAAS7B,GAF5D,OAGGjG,EAAQK,KAAR,wBAA8BwH,IAC9B5H,EAAS,CACLK,KhBtEc,agBuEdC,QAAS,KANhB,gDASGN,EAAS,CACLK,KhB3Ec,agB4EdC,QAAS,KAAIC,SAASC,OAX7B,yDAL4B,wDI6IlB0B,CAGbqH,I,wCCjMIK,G,kDAQF,aAAe,IAAD,8BACV,gBACK7G,MAAQ,CACT8G,SAAU,GACVC,SAAU,GACV7E,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASlD,KAAd,gBAChB,EAAKmD,SAAW,EAAKA,SAASnD,KAAd,gBARN,E,gEANNV,KAAKV,MAAMuD,SAASC,YACpB9C,KAAKV,MAAMb,QAAQK,KAAK,kB,+DAiBNgF,GAClBA,EAAUjB,SAASC,YACnB9C,KAAKV,MAAMb,QAAQK,KAAK,cAGxBgF,EAAUH,QACV3D,KAAK+D,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAIjCK,GACLA,EAAEG,iBACF,IAAMjC,EAAe,CACjBqG,SAAUvI,KAAKyB,MAAM8G,SACrBC,SAAUxI,KAAKyB,MAAM+G,UAGzBxI,KAAKV,MAAM2C,MAAMC,K,+BAGZ8B,GACLhE,KAAK+D,SAAL,eAAiBC,EAAExE,OAAOyE,KAAOD,EAAExE,OAAO0E,U,+BAEpC,IACEP,EAAW3D,KAAKyB,MAAhBkC,OAeR,OACI,yBAAK1D,UAAU,aACX,kBAAC,KAAD,CAEIwI,IAAKC,KACLC,MAAI,EACJC,OAAK,EAELC,SAAS,EACT5I,UAAU,YACVmD,MAAM,OACND,OAAO,SAIX,yBAAKlD,UAAW,6BAEZ,wBAAIA,UAAU,aAAaoB,MA9BtB,CACbyH,SAAU,SA6BF,cACA,wBAAI7I,UAAU,cAAd,uCAEA,0BAAM4D,SAAU7D,KAAK6D,SAAUxC,MA5B3B,CACZ0H,UAAW,OACX3F,MAAO,QA2BK,yBAAKnD,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAWoE,IAAW,gBAAiB,kBAAkB,CACrD,aAAcV,EAAO4E,WAEzBjE,YAAY,gBACZL,KAAK,WACLC,MAAOlE,KAAKyB,MAAM8G,SAClB3E,SAAU5D,KAAK4D,WAGlBD,EAAO4E,UACJ,yBAAKtI,UAAU,oBAAoB0D,EAAO4E,WAGlD,yBAAKtI,UAAU,cACX,2BACIlB,KAAK,WACLkB,UAAWoE,IAAW,gBAAiB,kBAAmB,CACtD,aAAcV,EAAO6E,WAEzBlE,YAAY,WACZL,KAAK,WACLC,MAAOlE,KAAKyB,MAAM+G,SAClB5E,SAAU5D,KAAK4D,WAGlBD,EAAO6E,UACJ,yBAAKvI,UAAU,oBAAoB0D,EAAO6E,WAIlD,2BAAOzJ,KAAK,SAASkB,UAAU,mEAC/B,kBAAC,IAAD,CAAMA,UAAU,mCAAmCC,GAAG,aAClD,8D,GAnHNS,aAyIPC,gBALS,SAAAa,GAAK,MAAK,CAC9BoB,SAAUpB,EAAMoB,SAChBc,OAAQlC,EAAMkC,UAGsB,CAAE1B,SAA3BrB,CAAqC0H,IC7I9CU,G,kDACF,aAAe,IAAD,8BACV,gBAEKvH,MAAQ,CACT8G,SAAU,GACVtF,SAAU,GACVuF,SAAU,GACVS,gBAAiB,GACjBtF,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASlD,KAAd,gBAChB,EAAKmD,SAAW,EAAKA,SAASnD,KAAd,gBAXN,E,gEAeNV,KAAKV,MAAMuD,SAASC,YACpB9C,KAAKV,MAAMb,QAAQK,KAAK,gB,gDAINgF,GAClBA,EAAUH,QACV3D,KAAK+D,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAIjCK,GACLA,EAAEG,iBACF,IAAM+E,EAAU,CACZX,SAAUvI,KAAKyB,MAAM8G,SACrBtF,SAAUjD,KAAKyB,MAAMwB,SACrBuF,SAAUxI,KAAKyB,MAAM+G,SACrBS,gBAAiBjJ,KAAKyB,MAAMwH,iBAGhCjJ,KAAKV,MAAM6J,cAAcD,EAASlJ,KAAKV,MAAMb,W,+BAGxCuF,GACLhE,KAAK+D,SAAL,eAAiBC,EAAExE,OAAOyE,KAAOD,EAAExE,OAAO0E,U,+BAGpC,IACEP,EAAW3D,KAAKyB,MAAhBkC,OACR,OACI,yBAAK1D,UAAU,8BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,uBACA,0BAAM4D,SAAU7D,KAAK6D,UACjB,yBAAK5D,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAWoE,IAAW,eAAgB,CAClC,aAAcV,EAAOV,WAEzBqB,YAAY,YACZL,KAAK,WACLC,MAAOlE,KAAKyB,MAAMwB,SAClBW,SAAU5D,KAAK4D,WAElBD,EAAOV,UACJ,yBAAKhD,UAAU,oBAAoB0D,EAAOV,WAGlD,yBAAKhD,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAWoE,IAAW,eAAgB,CAClC,aAAcV,EAAO4E,WAEzBjE,YAAY,2BACZL,KAAK,WACLC,MAAOlE,KAAKyB,MAAM8G,SAClB3E,SAAU5D,KAAK4D,WAElBD,EAAO4E,UACJ,yBAAKtI,UAAU,oBAAoB0D,EAAO4E,WAGlD,yBAAKtI,UAAU,cACX,2BACIlB,KAAK,WACLkB,UAAWoE,IAAW,eAAgB,CAClC,aAAcV,EAAO6E,WAEzBlE,YAAY,WACZL,KAAK,WACLC,MAAOlE,KAAKyB,MAAM+G,SAClB5E,SAAU5D,KAAK4D,WAElBD,EAAO6E,UACJ,yBAAKvI,UAAU,oBAAoB0D,EAAO6E,WAGlD,yBAAKvI,UAAU,cACX,2BACIlB,KAAK,WACLkB,UAAWoE,IAAW,eAAgB,CAClC,aAAcV,EAAOsF,kBAEzB3E,YAAY,mBACZL,KAAK,kBACLC,MAAOlE,KAAKyB,MAAMwH,gBAClBrF,SAAU5D,KAAK4D,WAElBD,EAAOsF,iBACJ,yBAAKhJ,UAAU,oBACV0D,EAAOsF,kBAIpB,2BAAOlK,KAAK,SAASkB,UAAU,yCAC/B,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAI,KAAnC,oB,GApHTS,aAwIRC,gBAJS,SAAAa,GAAK,MAAK,CAC9BkC,OAAQlC,EAAMkC,OACdd,SAAUpB,EAAMoB,YAIhB,CAAEsG,cjB3IuB,SAACD,EAASzK,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAErCC,IAAMC,KAAK,sBAAuBqK,GAFG,OAG3CzK,EAAQK,KAAK,UACbJ,EAAS,CACLK,KLXc,aKYdC,QAAS,KAN8B,gDAS3CN,EAAS,CACLK,KLhBc,aKiBdC,QAAS,KAAIC,SAASC,OAXiB,yDAAtB,wDiById0B,CAGboI,IC1III,G,kDACF,aAAe,IAAD,8BACV,gBACK3H,MAAQ,CACT8G,SAAU,GACVC,SAAU,GACV7E,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASlD,KAAd,gBAChB,EAAKmD,SAAW,EAAKA,SAASnD,KAAd,gBARN,E,gEAYNV,KAAKV,MAAMuD,SAASC,YACpB9C,KAAKV,MAAMb,QAAQK,KAAK,gB,gDAINgF,GAClBA,EAAUjB,SAASC,YACnB9C,KAAKV,MAAMb,QAAQK,KAAK,cAGxBgF,EAAUH,QACV3D,KAAK+D,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAIjCK,GACLA,EAAEG,iBACF,IAAMjC,EAAe,CACjBqG,SAAUvI,KAAKyB,MAAM8G,SACrBC,SAAUxI,KAAKyB,MAAM+G,UAGzBxI,KAAKV,MAAM2C,MAAMC,K,+BAGZ8B,GACLhE,KAAK+D,SAAL,eAAiBC,EAAExE,OAAOyE,KAAOD,EAAExE,OAAO0E,U,+BAGpC,IACEP,EAAW3D,KAAKyB,MAAhBkC,OACR,OACI,yBAAK1D,UAAU,2BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,yBAAd,UACA,0BAAM4D,SAAU7D,KAAK6D,UACjB,yBAAK5D,UAAU,cACX,2BACIlB,KAAK,OACLkB,UAAWoE,IAAW,gBAAiB,CACnC,aAAcV,EAAO4E,WAEzBjE,YAAY,gBACZL,KAAK,WACLC,MAAOlE,KAAKyB,MAAM8G,SAClB3E,SAAU5D,KAAK4D,WAElBD,EAAO4E,UACJ,yBAAKtI,UAAU,oBAAoB0D,EAAO4E,WAGlD,yBAAKtI,UAAU,cACX,2BACIlB,KAAK,WACLkB,UAAWoE,IAAW,gBAAiB,CACnC,aAAcV,EAAO6E,WAEzBlE,YAAY,WACZL,KAAK,WACLC,MAAOlE,KAAKyB,MAAM+G,SAClB5E,SAAU5D,KAAK4D,WAElBD,EAAO6E,UACJ,yBAAKvI,UAAU,oBAAoB0D,EAAO6E,WAGlD,2BAAOzJ,KAAK,SAASkB,UAAU,wCAC/B,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAI,KAAnC,oB,GAlFZS,aAuGLC,gBALS,SAAAa,GAAK,MAAK,CAC9BoB,SAAUpB,EAAMoB,SAChBc,OAAQlC,EAAMkC,UAKd,CAAE1B,SAFSrB,CAGbwI,I,SCxFaxI,gBAJS,SAAAa,GAAK,MAAK,CAC9BoB,SAAUpB,EAAMoB,YAGLjC,EArBM,SAAC,GAAD,IAAcD,EAAd,EAAG0I,UAAsBxG,EAAzB,EAAyBA,SAAayG,EAAtC,gDACjB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAjK,GAAK,OACe,IAAxBuD,EAASC,WACL,kBAACnC,EAAcrB,GAEf,kBAAC,IAAD,CAAUY,GAAG,kBCkBdsJ,G,uKA1BP,OACI,6BACI,gCACI,uBAAGvJ,UAAU,SAAb,cACA,qEACA,4BACI,4BACI,2BAAG,uBAAGA,UAAU,uBAChB,+CAEJ,4BACI,2BAAG,uBAAGA,UAAU,4BAChB,mDAEJ,4BACI,2BAAG,uBAAGA,UAAU,uBAChB,sD,GAlBPU,aCqBf8I,GAAWtH,aAAasH,SAE9B,GAAIA,GAAU,CACV7H,EAAY6H,IACZ,IAAMC,GAAmBpH,IAAWmH,IACpCnE,EAAM5G,SAAS,CACXK,K1BlBwB,mB0BmBxBC,QAAS0K,KAGb,IAAMC,GAAcjK,KAAKE,MAAQ,IAC7B8J,GAAiBE,IAAMD,KACvB9I,OAAOgJ,MAAM,uBACbvE,EAAM5G,SAAS6D,KACf1B,OAAO6B,SAASC,KAAO,KAO/B,IAAImH,GAAY,kBAAC,EAAD,MACZC,GAAa,kBAAC,GAAD,MA0DFC,G,uKAjDP,OACI,kBAAC,IAAD,CAAU1E,MAAOA,GACb,kBAAC,IAAD,KACI,yBAAKrF,UAAU,OACV6J,GAKD,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAIb,UAAWf,KACjC,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,YAAYb,UAAWL,KACzC,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,SAASb,UAAWD,KAKtC,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAca,OAAK,EAACC,KAAK,aAAab,UAAWnI,IACjD,kBAAC,GAAD,CAAc+I,OAAK,EAACC,KAAK,cAAcb,UAAW3F,IAClD,kBAAC,GAAD,CACIuG,OAAK,EACLC,KAAK,qBACLb,UAAWvD,KAEf,kBAAC,GAAD,CACImE,OAAK,EACLC,KAAK,oBACLb,UAAW7B,KAEf,kBAAC,GAAD,CACIyC,OAAK,EACLC,KAAK,sBACLb,UAAWvB,KAEf,kBAAC,GAAD,CACImC,OAAK,EACLC,KAAK,wCACLb,UAAWpB,MAGlB8B,U,GA1CPpJ,aCxCEwJ,QACW,cAA7BtJ,OAAO6B,SAAS0H,UAEe,UAA7BvJ,OAAO6B,SAAS0H,UAEhBvJ,OAAO6B,SAAS0H,SAASrE,MACvB,2DCZNsE,IAASd,OAEL,kBAAC,GAAD,MAEDe,SAASC,eAAe,SDyHrB,kBAAmBhF,WACrBA,UAAUiF,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBEzI5BC,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.fb4afde0.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/project\", project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/project/${id}`);\n        dispatch({\n            type: GET_PROJECT,\n            payload: res.data\n        });\n    } catch (error) {\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const deleteProject = id => async dispatch => {\n    if (\n        window.confirm(\n            \"Are you sure? This will delete the project and all the data related to it\"\n        )\n    ) {\n        await axios.delete(`/api/project/${id}`);\n        dispatch({\n            type: DELETE_PROJECT,\n            payload: id\n        });\n    }\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\n\nclass ProjectItem extends Component {\n    onDeleteClick = id => {\n        this.props.deleteProject(id);\n    };\n\n    leftTime(target) {\n        var diff =  new Date(target).getTime() - Date.now();\n        var days = Math.floor(diff/86400000);\n        var count;\n        if(days >=0){\n            count = days + \" Days Left\"\n        }else{\n            days *= -1;\n            count = days + \" Days Ago\"\n        }\n        return count;\n\n    }\n\n\n\n\n    render() {\n        const { project } = this.props;\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3 theFont theBorderRadius cardSize OverFlow\">\n                    <div className=\"row\">\n                        <div className=\"col-md-7 sol-sm-7 cardSize\">\n                            <Link className=\"theLinkColor theLinkFocus\" to={`/projectBoard/${project.projectIdentifier}`}><h3>{project.projectName}</h3></Link>\n                            <span className=\"mx-auto \">No. {project.projectIdentifier}</span>\n                            <p className=\"OverFlow descSize2\">{project.description}</p>\n\n                            <div className=\"editCard\">\n                                <span>Start : {project.start_date}</span>\n                                <br/>\n                                <span>Due: {project.end_date}</span>\n                                <strong><p>{this.leftTime(project.end_date)}</p></strong>\n                            </div>\n\n\n                        </div>\n                        {/*<div className=\"col-lg-6 col-md-4 col-8\">*/}\n\n                        {/*</div> d-none d-lg-block*/ }\n                        <div className=\"col-md-5 col-sm-5   \">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <p className=\"theLinkColor\"><i className=\"fa fa-flag-checkered pr-1 \"></i>Mission Board</p>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <p className=\"theLinkColor\"><i className=\"fa fa-edit pr-1\"></i>Update Info</p>\n                                    </li>\n                                </Link>\n\n                                <li\n                                    className=\"list-group-item delete\"\n                                    onClick={this.onDeleteClick.bind(\n                                        this,\n                                        project.projectIdentifier\n                                    )}\n                                >\n                                    <p className=\"theLinkColor\"><i className=\"fa fa-minus-circle pr-1\"></i>Delete Mission </p>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired,\n\n};\n\nexport default connect(\n    null,\n    { deleteProject }\n)(ProjectItem);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-outline-dark theFont theBorderRadius\">\n                Add a Mission\n            </Link>\n        </React.Fragment>\n    );\n};\n\nexport default CreateProjectButton;","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\n\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n\n\n    render() {\n        const { projects } = this.props.project;\n\n        const theDashBoard = {\n            display:\"flex\"\n        };\n\n        return (\n\n            <div className=\"projects theHeight\">\n                <div className=\"container\">\n\n                    <h1 className=\"display-4 text-center theFont\">Mission</h1>\n                    <br />\n                    <CreateProjectButton />\n\n                    <br />\n                    <hr />\n                    <div style={theDashBoard} className=\"row\">\n                    {projects.map(project => (\n                        <div className=\"col-md-6 col-sm-12 \">\n                            <ProjectItem key={project.id} project={project} />\n                        </div>\n                    ))}\n                    </div>\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProjects }\n)(Dashboard);","\nimport axios from \"axios\";\n\nconst setJWTToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setJWTToken;","\nimport axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const login = LoginRequest => async dispatch => {\n    try {\n        // post => Login Request\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\n        // extract token from res.data\n        const { token } = res.data;\n        // store the token in the localStorage\n        localStorage.setItem(\"jwtToken\", token);\n        // set our token in header ***\n        setJWTToken(token);\n        // decode token on React\n        const decoded = jwt_decode(token);\n        // dispatch to our securityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\nimport Icon from \"../../assets/manager.svg\"\n\nclass Header extends Component {\n    logout() {\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n    render() {\n        const { validToken, user } = this.props.security;\n\n        const theIcon = {\n            height: \"1.5rem\",\n            width : \"1.5rem\",\n            marginRight: \"10px\"\n        };\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            <i className=\"fas fa-user-circle mr-1\" />\n                            {user.fullName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            to=\"/logout\"\n                            onClick={this.logout.bind(this)}\n                        >\n                            Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/register\">\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        let headerLinks;\n\n        if (validToken && user) {\n            headerLinks = userIsAuthenticated;\n        } else {\n            headerLinks = userIsNotAuthenticated;\n        }\n\n        return (\n            // mb-4\n            <nav className=\"navbar navbar-expand-sm navbar-light\">\n                <div className=\"container\">\n\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        <img style={theIcon} src={Icon} />\n                        TaskMaster\n                    </Link>\n                    <button\n                        className=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#mobile-nav\"\n                    >\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {headerLinks}\n                </div>\n            </nav>\n        );\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(\n    mapStateToProps,\n    { logout }\n)(Header);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\nimport {Link} from \"react-router-dom\";\n\nclass AddProject extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n        this.props.createProject(newProject, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div>\n                <div className=\"project theHeight theFont pt-5 pb-5\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Your Mission</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control \", {\n                                                \"is-invalid\": errors.projectName\n                                            })}\n                                            placeholder=\"Project Name\"\n                                            name=\"projectName\"\n                                            value={this.state.projectName}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.projectName}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control \", {\n                                                \"is-invalid\": errors.projectIdentifier\n                                            })}\n                                            placeholder=\"Unique Project ID\"\n                                            name=\"projectIdentifier\"\n                                            value={this.state.projectIdentifier}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectIdentifier && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.projectIdentifier}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                    <textarea\n                        className={classnames(\"form-control \", {\n                            \"is-invalid\": errors.description\n                        })}\n                        placeholder=\"Project Description\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.onChange}\n                        rows=\"5\"\n                    />\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.description}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control \"\n                                            name=\"start_date\"\n                                            value={this.state.start_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control \"\n                                            name=\"end_date\"\n                                            value={this.state.end_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-outline-dark btn-block mt-4 mb-4\"\n                                    />\n                                    <Link\n                                        to={`/projectBoard/`}\n                                        className=\"theFont theLinkColor text-center \"\n                                    >\n                                        Go Back\n                                    </Link>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { createProject }\n)(AddProject);","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            };\n\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            };\n\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(\n                    project => project.projectIdentifier !== action.payload\n                )\n            };\n        default:\n            return state;\n    }\n}","\nimport {\n    GET_BACKLOG,\n    GET_PROJECT_TASK,\n    DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            };\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            };\n\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(\n                    project_task => project_task.projectSequence !== action.payload\n                )\n            };\n\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    validToken: false,\n    user: {}\n};\n\nconst booleanActionPayload = payload => {\n    if (payload) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken: booleanActionPayload(action.payload),\n                user: action.payload\n            };\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(\n        rootReducer,\n        initalState,\n        compose(\n            applyMiddleware(...middleware),\n            ReactReduxDevTools\n        )\n    );\n} else {\n    store = createStore(\n        rootReducer,\n        initalState,\n        compose(applyMiddleware(...middleware))\n    );\n}\n\nexport default store;","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {Link} from \"react-router-dom\";\n\nclass UpdateProject extends Component {\n    //set state\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        });\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const updateProject = {\n            id: this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n\n        this.props.createProject(updateProject, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"project theFont theHeight\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto pt-5 pb-5\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control\", {\n                                            \"is-invalid\": errors.projectName\n                                        })}\n                                        placeholder=\"Project Name\"\n                                        name=\"projectName\"\n                                        value={this.state.projectName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.projectIdentifier}\n                                        onChange={this.onChange}\n                                        disabled\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                  <textarea\n                      className={classnames(\"form-control\", {\n                          \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      onChange={this.onChange}\n                      value={this.state.description}\n                      cols = \"30\"\n                      rows=\"5\"\n                  />\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control \"\n                                        name=\"start_date\"\n                                        value={this.state.start_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control \"\n                                        name=\"end_date\"\n                                        value={this.state.end_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-info btn-block mt-4 mb-4\"\n                                />\n                                <Link\n                                    to={`/projectBoard/`}\n                                    className=\"theFont theLinkColor text-center \"\n                                >\n                                    Go Back\n                                </Link>\n\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProject, createProject }\n)(UpdateProject);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n    onDeleteClick(backlog_id, pt_id) {\n        this.props.deleteProjectTask(backlog_id, pt_id);\n    }\n\n    leftTime(target) {\n        if(!target) return \"\";\n        var diff =  new Date(target).getTime() - Date.now();\n        var days = Math.floor(diff/86400000);\n        var count;\n        if(days >=0){\n            count = days + \" Days Left\"\n        }else{\n            days *= -1;\n            count = days + \" Days Ago\"\n        }\n        return count;\n\n    }\n    render() {\n        const { project_task } = this.props;\n        let priorityString;\n        let priorityClass;\n\n        if (project_task.priority === 1) {\n            priorityClass = \"bg-high text-dark\";\n            priorityString = \"HIGH\";\n        }\n\n        if (project_task.priority === 2) {\n            priorityClass = \"bg-medium text-dark\";\n            priorityString = \"MEDIUM\";\n        }\n\n        if (project_task.priority === 3) {\n            priorityClass = \"bg-low text-dark\";\n            priorityString = \"LOW\";\n        }\n\n        return (\n            <div className=\"card mb-1 bg-light cardSize\">\n                <div className={`card-header text-primary ${priorityClass}`}>\n                    ID: {project_task.projectSequence} - Priority: {priorityString} -\n                </div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\n                    <stong><p className=\"theFontSize\">{this.leftTime(project_task.dueDate)}</p></stong>\n                    <p className=\"card-text  OverFlow descSize\">\n                        {project_task.acceptanceCriteria}\n                    </p>\n                    <div className=\"editCard\">\n                        <Link\n                            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n                                project_task.projectSequence\n                            }`}\n                            className=\"btn btn-sm btn-outline-dark\"\n                        >\n                            View / Update\n                        </Link>\n\n                        <button\n                            className=\"btn btn-sm btn-outline-dark ml-4\"\n                            onClick={this.onDeleteClick.bind(\n                                this,\n                                project_task.projectIdentifier,\n                                project_task.projectSequence\n                            )}\n                        >\n                            Delete\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectTask.propTypes = {\n    deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n    null,\n    { deleteProjectTask }\n)(ProjectTask);","import axios from \"axios\";\nimport {\n    GET_ERRORS,\n    GET_BACKLOG,\n    GET_PROJECT_TASK,\n    DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n    backlog_id,\n    project_task,\n    history\n) => async dispatch => {\n    try {\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\n        dispatch({\n            type: GET_BACKLOG,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjectTask = (\n    backlog_id,\n    pt_id,\n    history\n) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n        dispatch({\n            type: GET_PROJECT_TASK,\n            payload: res.data\n        });\n    } catch (err) {\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const updateProjectTask = (\n    backlog_id,\n    pt_id,\n    project_task,\n    history\n) => async dispatch => {\n    try {\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n    if (\n        window.confirm(\n            `You are deleting project task ${pt_id}, this action cannot be undone`\n        )\n    ) {\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n        dispatch({\n            type: DELETE_PROJECT_TASK,\n            payload: pt_id\n        });\n    }\n};","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n    render() {\n        const { project_tasks_prop } = this.props;\n\n        const tasks = project_tasks_prop.map(project_task => (\n            <ProjectTask key={project_task.id} project_task={project_task} />\n        ));\n\n        let todoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\n                todoItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n                inProgressItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"DONE\") {\n                doneItems.push(tasks[i]);\n            }\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg text-dark\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                        {todoItems}\n                        {\n                            // insert tasks here\n                        }\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg text-dark\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg text-success\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Backlog;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n    //constructor to handle errors\n    constructor() {\n        super();\n        this.state = {\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    render() {\n        const { id } = this.props.match.params;\n        const { project_tasks } = this.props.backlog;\n        const { errors } = this.state;\n\n        let BoardContent;\n\n        const boardAlgorithm = (errors, project_tasks) => {\n            if (project_tasks.length < 1) {\n                //PROJECT IDENTIFIER BUG\n                if (errors.projectNotFound) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectNotFound}\n                        </div>\n                    );\n                } else if (errors.projectIdentifier) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectIdentifier}\n                        </div>\n                    );\n                } else {\n                    return (\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\n                            No Mission Tasks on this board\n                        </div>\n                    );\n                }\n            } else {\n                return <Backlog project_tasks_prop={project_tasks} />;\n            }\n        };\n\n        BoardContent = boardAlgorithm(errors, project_tasks);\n\n        return (\n            <div className=\"container pt-5 pb-5 theFont theHeight\" >\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-lg btn-outline-dark mb-3 theBorderRadius theFont\">\n                    <i className=\"fa fa-plus-circle\"></i> Create Mission Task\n                </Link>\n                <br />\n                <hr />\n                {BoardContent}\n            </div>\n        );\n    }\n}\n\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getBacklog }\n)(ProjectBoard);","\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n    constructor(props) {\n        super(props);\n        const { id } = this.props.match.params;\n\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    // on change\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    //on submit\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newTask = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate\n        };\n\n        this.props.addProjectTask(\n            this.state.projectIdentifier,\n            newTask,\n            this.props.history\n        );\n    }\n\n    render() {\n        const { id } = this.props.match.params;\n        const { errors } = this.state;\n        return (\n            <div className=\"add-PBI theHeight theFont pt-5 pd-5\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 m-auto\">\n\n                            <h4 className=\"display-4 text-center\">Add Mission Task</h4>\n                            <p className=\"lead text-center\">Mission Name + Mission Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control\", {\n                                            \"is-invalid\": errors.summary\n                                        })}\n                                        name=\"summary\"\n                                        placeholder=\"Mission Task summary\"\n                                        value={this.state.summary}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                  <textarea\n                      className=\"form-control \"\n                      placeholder=\"Acceptance Criteria\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                  />\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"dueDate\"\n                                        value={this.state.dueDate}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control \"\n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-outline-dark btn-block mt-4 mb-3\"\n                                />\n                                <Link\n                                    to={`/projectBoard/${id}`}\n                                    className=\"theFont theLinkColor text-center \"\n                                >\n                                    Back to Mission Board\n                                </Link>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { addProjectTask }\n)(AddProjectTask);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getProjectTask,\n    updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            create_At: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const { backlog_id, pt_id } = this.props.match.params;\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        } = nextProps.project_task;\n\n        this.setState({\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        });\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const UpdateProjectTask = {\n            id: this.state.id,\n            projectSequence: this.state.projectSequence,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n            projectIdentifier: this.state.projectIdentifier,\n            create_At: this.state.create_At\n        };\n\n        // console.log(UpdateProjectTask);\n        this.props.updateProjectTask(\n            this.state.projectIdentifier,\n            this.state.projectSequence,\n            UpdateProjectTask,\n            this.props.history\n        );\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"add-PBI theHeight\">\n                <div className=\"container theFont\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 m-auto pt-5 pb-5\">\n\n                            <h2 className=\" text-center\">Update Mission Task</h2>\n                            <p className=\"lead text-center\">\n                                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                                {this.state.projectSequence}{\" \"}\n                            </p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control\", {\n                                            \"is-invalid\": errors.summary\n                                        })}\n                                        name=\"summary\"\n                                        placeholder=\"Project Task summary\"\n                                        value={this.state.summary}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                  <textarea\n                      className=\"form-control\"\n                      placeholder=\"Acceptance Criteria or Description\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                      rows=\"5\"\n                  />\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"dueDate\"\n                                        value={this.state.dueDate}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control \"\n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control \"\n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-outline-dark btn-block mt-4 mb-3\"\n                                />\n                                <Link\n                                    to={`/projectBoard/${this.state.projectIdentifier}`}\n                                    className=\"theFont theLinkColor text-center \"\n                                >\n                                    Back to Mission Board\n                                </Link>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n// import \"node_modules/video-react/dist/video-react.css\";\nimport ReactPlayer from 'react-player'\nimport {login} from \"../../actions/securityActions\";\nimport classnames from \"classnames\";\nimport Video from \"../../assets/orange.mp4\";\n\n\nclass Landing extends Component {\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const LoginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        };\n\n        this.props.login(LoginRequest);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    render() {\n        const { errors } = this.state;\n\n        const theTitle = {\n            fontSize: \"60px\",\n\n        };\n\n        const theForm = {\n            marginTop: \"30px\",\n            width: \"70%\"\n        };\n\n\n\n\n        return (\n            <div className=\"theHeight\" >\n                <ReactPlayer\n\n                    url={Video}\n                    loop\n                    muted\n\n                    playing={true}\n                    className=\"the_video\"\n                    width='100%'\n                    height='100%'\n\n                />\n\n                <div className= \"text-left the_title_board\" >\n\n                    <h1 className=\"textShadow\" style={theTitle}>TaskMaster</h1>\n                    <h3 className=\"textShadow\" >Schedule your Life, Succeed in Life</h3>\n\n                    <form onSubmit={this.onSubmit} style={theForm}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className={classnames(\"form-control \", \"theBorderRadius\",{\n                                    \"is-invalid\": errors.username\n                                })}\n                                placeholder=\"Email Address\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.onChange}\n\n                            />\n                            {errors.username && (\n                                <div className=\"invalid-feedback\">{errors.username}</div>\n                            )}\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className={classnames(\"form-control \", \"theBorderRadius\", {\n                                    \"is-invalid\": errors.password\n                                })}\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.onChange}\n\n                            />\n                            {errors.password && (\n                                <div className=\"invalid-feedback\">{errors.password}</div>\n                            )}\n                        </div>\n\n                        <input type=\"submit\" className=\"blockShadow btn btn-light btn-block theBorderRadius mt-4 mb-3 \" />\n                        <Link className=\" mr-2 mt-10 theLinkColor theFont\" to=\"/register\" >\n                            <strong>Create New Account</strong>\n                        </Link>\n                        {/*btn btn-sm btn-secondary*/}\n                    </form>\n                 </div>\n\n            </div>\n        );\n    }\n}\n\nLanding.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { login } )(Landing);;","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {Link} from \"react-router-dom\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            username: \"\",\n            fullName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        };\n\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"register theFont theHeight\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control\", {\n                                            \"is-invalid\": errors.fullName\n                                        })}\n                                        placeholder=\"Full Name\"\n                                        name=\"fullName\"\n                                        value={this.state.fullName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.fullName && (\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address (Username)\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control\", {\n                                            \"is-invalid\": errors.confirmPassword\n                                        })}\n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\"\n                                        value={this.state.confirmPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.confirmPassword}\n                                        </div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\" btn btn-outline-dark btn-block mb-4\" />\n                                <Link className=\"theLinkColor\" to={\"/\"}>Go Back</Link>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\nexport default connect(\n    mapStateToProps,\n    { createNewUser }\n)(Register);","\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\nimport {Link} from \"react-router-dom\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const LoginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        };\n\n        this.props.login(LoginRequest);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"login theFont theHeight\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control \", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control \", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-outline-dark btn-block mb-4\" />\n                                <Link className=\"theLinkColor\" to={\"/\"}>Go Back</Link>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { login }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n    <Route\n        {...otherProps}\n        render={props =>\n            security.validToken === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nSecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React, {Component} from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div>\n                <footer>\n                    <p className=\"title\">What We Do</p>\n                    <p>\"Help you find the best place around.\"</p>\n                    <ul>\n                        <li>\n                            <p><i className=\"fa fa-map-o fa-2x\"></i></p>\n                            <p>Los Angeles, CA</p>\n                        </li>\n                        <li>\n                            <p><i className=\"fa fa-envelope-o fa-2x\"></i></p>\n                            <p>zqian0308@gmail.com</p>\n                        </li>\n                        <li>\n                            <p><i className=\"fa fa-phone fa-2x\"></i></p>\n                            <p>+1 321 000 0000</p>\n                        </li>\n                    </ul>\n                </footer>\n\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport Footer from \"./components/Layout/Footer\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n    setJWTToken(jwtToken);\n    const decoded_jwtToken = jwt_decode(jwtToken);\n    store.dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_jwtToken\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decoded_jwtToken.exp < currentTime) {\n        window.alert(\"Time is out, logout\");\n        store.dispatch(logout());\n        window.location.href = \"/\";\n\n\n\n    }\n}\n\nlet isLanding = <Header />;\nlet showFooter = <Footer />;\n// if(Route.component !== {Landing} ) {\n//\n//     isLanding = (<Header/>);\n//     showFooter = (<Footer/>);\n// }\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        {isLanding}\n                        {\n                            //Public Routes\n                        }\n\n                        <Route exact path=\"/\" component={Landing} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/login\" component={Login} />\n\n                        {\n                            //Private Routes\n                        }\n                        <Switch>\n                            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n                            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n                            <SecuredRoute\n                                exact\n                                path=\"/updateProject/:id\"\n                                component={UpdateProject}\n                            />\n                            <SecuredRoute\n                                exact\n                                path=\"/projectBoard/:id\"\n                                component={ProjectBoard}\n                            />\n                            <SecuredRoute\n                                exact\n                                path=\"/addProjectTask/:id\"\n                                component={AddProjectTask}\n                            />\n                            <SecuredRoute\n                                exact\n                                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                                component={UpdateProjectTask}\n                            />\n                        </Switch>\n                        {showFooter}\n\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>,\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/manager.f3c56e84.svg\";","module.exports = __webpack_public_path__ + \"static/media/orange.6f501309.mp4\";"],"sourceRoot":""}